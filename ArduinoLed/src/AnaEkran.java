
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;
import jssc.SerialPortList;

public class AnaEkran extends javax.swing.JFrame implements SerialPortEventListener {
    private final OutputStream outStream = null;
    SerialPort SerialPort;
    String GelenVeri;

    /**
     * Creates new form AnaEkran
     */
    public AnaEkran() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BTNLedYak = new javax.swing.JButton();
        BTNLedSondur = new javax.swing.JButton();
        BTNSeriPortKapat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TXTGelen = new javax.swing.JTextArea();
        BTNSeriPortAc = new javax.swing.JButton();
        CBoxPort = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        BTNLedYak.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        BTNLedYak.setForeground(new java.awt.Color(0, 204, 51));
        BTNLedYak.setText("Led Aç");
        BTNLedYak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNLedYakActionPerformed(evt);
            }
        });

        BTNLedSondur.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        BTNLedSondur.setForeground(new java.awt.Color(204, 0, 0));
        BTNLedSondur.setText("Led Kapat");
        BTNLedSondur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNLedSondurActionPerformed(evt);
            }
        });

        BTNSeriPortKapat.setText("Seriport kapat");
        BTNSeriPortKapat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNSeriPortKapatActionPerformed(evt);
            }
        });

        TXTGelen.setEditable(false);
        TXTGelen.setColumns(20);
        TXTGelen.setFont(new java.awt.Font("Noto Sans", 0, 8)); // NOI18N
        TXTGelen.setLineWrap(true);
        TXTGelen.setRows(5);
        TXTGelen.setTabSize(5);
        jScrollPane1.setViewportView(TXTGelen);

        BTNSeriPortAc.setText("Seriport aç/bağlan");
        BTNSeriPortAc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNSeriPortAcActionPerformed(evt);
            }
        });

        jLabel1.setText("Seriport:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BTNSeriPortKapat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BTNSeriPortAc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CBoxPort, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BTNLedYak, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BTNLedSondur, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(CBoxPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTNSeriPortAc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTNSeriPortKapat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTNLedYak)
                    .addComponent(BTNLedSondur))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTNLedYakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNLedYakActionPerformed
        try {
            //Seri porttan "o" gönderiliyor. 
            SerialPort.writeString("o");
        } catch (SerialPortException ex) {
            Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BTNLedYakActionPerformed

    private void BTNLedSondurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNLedSondurActionPerformed
        try {
            //Seri porttan "c" gönderiliyor. 
            SerialPort.writeString("c");
        } catch (SerialPortException ex) {
            Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BTNLedSondurActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Uygulama açılısında serial port listesi çekiliyor
        String[] serialPortNames = SerialPortList.getPortNames();
        for (String name : serialPortNames) {
            CBoxPort.addItem(name);
        }
            }//GEN-LAST:event_formWindowOpened
    private void BTNSeriPortKapatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNSeriPortKapatActionPerformed
        try {
            SerialPort.closePort();  // Portu Kapat
        } catch (SerialPortException ex) {
            Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
        }    }//GEN-LAST:event_BTNSeriPortKapatActionPerformed

    private void BTNSeriPortAcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNSeriPortAcActionPerformed
        try {
            //Serial port adını ComboBox dan seçiyoruz.
            SerialPort = new SerialPort(CBoxPort.getSelectedItem().toString());
            SerialPort.openPort();  // Portu Aç
            SerialPort.addEventListener(this);

        } catch (SerialPortException ex) {
            Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            SerialPort.setParams(9600, 8, 1, 0); // 9600 Baud, 8 bit veri, 1 bit stop biti, Parity biti  (*********) 
        } catch (SerialPortException ex) {
            Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_BTNSeriPortAcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnaEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnaEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnaEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnaEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnaEkran().setVisible(true);
            }
        });
    }

    @Override
    public void serialEvent(SerialPortEvent event) {
        try {
            String receivedDatas = SerialPort.readString();
            TXTGelen.append(receivedDatas);
        } catch (SerialPortException ex) {
            Logger.getLogger(AnaEkran.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNLedSondur;
    private javax.swing.JButton BTNLedYak;
    private javax.swing.JButton BTNSeriPortAc;
    private javax.swing.JButton BTNSeriPortKapat;
    private javax.swing.JComboBox<String> CBoxPort;
    private javax.swing.JTextArea TXTGelen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
